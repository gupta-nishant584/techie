2019-12-22 17:26:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "EMPLOYEE" already exists; SQL statement:
CREATE TABLE EMPLOYEE( ID INT AUTO_INCREMENT PRIMARY KEY, FIRST_NAME VARCHAR (250) NOT NULL, LAST_NAME VARCHAR (250) NOT NULL, EMAIL VARCHAR (250) DEFAULT NULL ) [42101-197]
2019-12-22 17:28:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "EMPLOYEE" already exists; SQL statement:
CREATE TABLE EMPLOYEE( ID INT AUTO_INCREMENT PRIMARY KEY, FIRST_NAME VARCHAR (250) NOT NULL, LAST_NAME VARCHAR (250) NOT NULL, EMAIL VARCHAR (250) DEFAULT NULL ) [42101-197]
2019-12-22 17:33:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, EMAIL)[*]"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, FROM"; SQL statement:
INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, EMAIL) [42001-197]
2019-12-22 17:36:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, EMAIL)[*]"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, FROM"; SQL statement:
INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, EMAIL) [42001-197]
2019-12-22 17:38:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLException: Column count does not match; SQL statement:
INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, EMAIL)
VALUES (1,'NISHANT','GUPTA','abc@gmail.com'),
       (2,'NITYA','GUPTA','xyz@gmail.com') [21002-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.command.dml.Insert.prepare(Insert.java:306)
	at org.h2.command.Parser.prepareCommand(Parser.java:283)
	at org.h2.engine.Session.prepareLocal(Session.java:611)
	at org.h2.engine.Session.prepareCommand(Session.java:549)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1247)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:217)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:1077)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1386)
	at org.h2.server.web.WebApp.query(WebApp.java:1060)
	at org.h2.server.web.WebApp.query(WebApp.java:1036)
	at org.h2.server.web.WebApp.process(WebApp.java:223)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:170)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:124)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:161)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-12-23 10:41:10 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM EMPLOYEE

UPDATE EMPLOYEE[*] SET FIRST_NAME='VARUN' , LAST_NAME='SHANKAR' WHERE ID=2"; SQL statement:
SELECT * FROM EMPLOYEE

UPDATE EMPLOYEE SET FIRST_NAME='VARUN' , LAST_NAME='SHANKAR' WHERE ID=2 [42000-197]
2019-12-23 10:41:55 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM EMPLOYEE

UPDATE EMPLOYEE[*] SET FIRST_NAME=VARUN , LAST_NAME=SHANKAR WHERE ID=2"; SQL statement:
SELECT * FROM EMPLOYEE

UPDATE EMPLOYEE SET FIRST_NAME=VARUN , LAST_NAME=SHANKAR WHERE ID=2 [42000-197]
2019-12-23 10:42:09 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM EMPLOYEE

DELETE *[*] FROM EMPLOYEE WHERE ID=2"; SQL statement:
SELECT * FROM EMPLOYEE

DELETE * FROM EMPLOYEE WHERE ID=2 [42000-197]
2019-12-23 10:42:24 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM EMPLOYEE

DELETE  FROM[*] EMPLOYEE WHERE ID='2'"; SQL statement:
SELECT * FROM EMPLOYEE

DELETE  FROM EMPLOYEE WHERE ID='2' [42000-197]
2019-12-26 17:04:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "EMPLOYEE_PROFILE" already exists; SQL statement:
CREATE TABLE EMPLOYEE_PROFILE ( id INT AUTO_INCREMENT PRIMARY KEY, GENDER VARCHAR(250) NOT NULL, MARITAL_STATUS VARCHAR(250) NOT NULL, PIN_CODE VARCHAR(250) DEFAULT NULL, EMPLOYEE_ID VARCHAR (250) NOT NULL ) [42101-197]
2019-12-26 17:05:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "EMPLOYEE_PROFILE" already exists; SQL statement:
CREATE TABLE EMPLOYEE_PROFILE ( id INT AUTO_INCREMENT PRIMARY KEY, GENDER VARCHAR(250) NOT NULL, MARITAL_STATUS VARCHAR(250) NOT NULL, PIN_CODE VARCHAR(250) DEFAULT NULL, EMPLOYEE_ID VARCHAR (250) NOT NULL ) [42101-197]
2019-12-31 15:48:17 jdbc[54]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-197]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:197)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:137)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:103)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:117)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:123)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:365)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:194)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:460)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:699)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:685)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	... 20 more
